apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dci-container.fullname" . }}
  labels:
    {{- include "dci-container.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "dci-container.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        k8s.v1.cni.cncf.io/networks: {{ .Values.dcinetipvlan.name }}              
      labels:
        {{- include "dci-container.selectorLabels" . | nindent 8 }}
    spec:
      imagePullSecrets:
      {{- if eq .Values.global.imagePullSecrets.enabled true }}
      - name: {{ .Values.global.imagePullSecrets.name }}            
      {{- end }}
      serviceAccountName: {{ include "dci-container.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.global.repository }}/{{ .Values.image.dcipreflight.imgname }}:{{ .Values.image.dcipreflight.tag }}
          command: ["/bin/sh"]
          args:
            - -c
            - >-
                echo "Setting DCI Proxy ENV and sleeping..."
                i=0;
                {{- if eq .Values.Proxy.enabled true }}
                echo 'https_proxy={{ .Values.Proxy.https_proxy }}' >> /etc/environment;
                echo 'http_proxy={{ .Values.Proxy.http_proxy }}' >> /etc/environment;
                echo 'no_proxy={{ .Values.Proxy.no_proxy }}' >> /etc/environment;
                {{- end }}
                echo 'KUBECONFIG={{ .Values.KubeConf.kubeconfig }}' >> /etc/environment;                
                while true; 
                do 
                  echo "$i: $(date)"; 
                  i=$((i+1)); 
                  sleep 3600; 
                done
          imagePullPolicy: {{ .Values.image.dcipreflight.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      nodeSelector:
      {{- if eq .Values.global.nodeselector.enabled true }}
        "{{ .Values.global.nodeselector.key }}" : "{{ .Values.global.nodeselector.value }}"
      {{- end }}
